// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: run_log.sql

package sqlcrepo

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const fetchRunLog = `-- name: FetchRunLog :one
SELECT id, message, timestamp, run_id FROM run_logs
WHERE id = $1
`

func (q *Queries) FetchRunLog(ctx context.Context, id string) (RunLog, error) {
	row := q.db.QueryRow(ctx, fetchRunLog, id)
	var i RunLog
	err := row.Scan(
		&i.ID,
		&i.Message,
		&i.Timestamp,
		&i.RunID,
	)
	return i, err
}

const fetchRunLogsByRun = `-- name: FetchRunLogsByRun :many
SELECT id, message, timestamp, run_id FROM run_logs
WHERE run_logs.run_id = $1
`

func (q *Queries) FetchRunLogsByRun(ctx context.Context, runID string) ([]RunLog, error) {
	rows, err := q.db.Query(ctx, fetchRunLogsByRun, runID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []RunLog
	for rows.Next() {
		var i RunLog
		if err := rows.Scan(
			&i.ID,
			&i.Message,
			&i.Timestamp,
			&i.RunID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const saveRunLog = `-- name: SaveRunLog :one
INSERT INTO run_logs (
  id, message, timestamp, run_id
) VALUES (
  $1, $2, $3, $4
)
RETURNING id
`

type SaveRunLogParams struct {
	ID        string
	Message   string
	Timestamp pgtype.Timestamp
	RunID     string
}

func (q *Queries) SaveRunLog(ctx context.Context, arg SaveRunLogParams) (string, error) {
	row := q.db.QueryRow(ctx, saveRunLog,
		arg.ID,
		arg.Message,
		arg.Timestamp,
		arg.RunID,
	)
	var id string
	err := row.Scan(&id)
	return id, err
}
